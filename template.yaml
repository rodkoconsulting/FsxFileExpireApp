AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  FsxFileExpireApp

  Sample SAM Template for FsxFileExpireApp

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900
    MemorySize: 512

Parameters:
  VpcSubnet:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>
    Description: SSM Parameter store key of type StringList with the list of VPC Subnet to be used by Lambda function
    Default: /sam/vpcSubnetsProd
  VpcSg:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>
    Description: SSM Parameter store key of type String with the VPC Security Group to be used by Lambda function
    Default: /sam/vpcSgProd
  Environment:
    Type: String
    AllowedValues:
      - DEV
      - PROD

Resources:
  FsxFileExpireFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: FsxFileExpirePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:AssignPrivateIpAddresses
                  - ec2:UnassignPrivateIpAddresses
                  - lambda:InvokeFunction
                Resource: '*'
      RoleName: !Sub FsxFileExpireFunctionRole_${Environment}

  FsxFileExpireSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: FsxFileExpireSchedulerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:FsxFileExpireFunction_${Environment}:*"
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:FsxFileExpireFunction_${Environment}"
      RoleName: !Sub FsxFileExpireSchedulerRole_${Environment}

  FsxFileExpireFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: FsxFileExpire/
      Role: !GetAtt FsxFileExpireFunctionRole.Arn
      FunctionName: !Sub FsxFileExpireFunction_${Environment}
      Handler: app.lambda_handler
      Runtime: python3.11
      VpcConfig:
        SubnetIds: !Ref VpcSubnet
        SecurityGroupIds:
          - !Ref VpcSg
      Architectures:
        - x86_64
      Events:
        Schedule:
          Type: ScheduleV2
          Properties:
            Name: !Sub FsxFileExpireSchedule_${Environment}
            Description: Daily schedule to invoke FsxFileExpireFunction
            RoleArn: !GetAtt FsxFileExpireSchedulerRole.Arn
            ScheduleExpression: "cron(0 4 * * ? *)"
            ScheduleExpressionTimezone: "America/New_York"
            FlexibleTimeWindow:
              Mode: FLEXIBLE
              MaximumWindowInMinutes: 15
            RetryPolicy:
              MaximumRetryAttempts: 5
              MaximumEventAgeInSeconds: 900

  FsxFileExpireErrorTopic:
    Type: AWS::SNS::Topic # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      TopicName:  !Sub FsxFileExpireErrorTopic_${Environment}
      Subscription:
        - Endpoint: itadmin@polanerselections.com
          Protocol: email

  FsxFileExpireAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FsxFileExpireAlarm_${Environment}
      AlarmDescription: Error alarm for FsxFileExpireFunction
      AlarmActions:
        - !Ref FsxFileExpireErrorTopic
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref FsxFileExpireFunction
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      Period: 60
      EvaluationPeriods: 1

  FsxFileExpireLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FsxFileExpireFunction}
      RetentionInDays: 7

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  FsxFileExpireFunction:
    Description: "FsxFileExpire Lambda Function ARN"
    Value: !GetAtt FsxFileExpireFunction.Arn
